# Importar librerías necesarias
from sklearn.tree import DecisionTreeRegressor

# Crear el modelo de árbol de decisión
tree_model = DecisionTreeRegressor(random_state=42)

# Ajustar el modelo con los datos de entrenamiento
tree_model.fit(X_train, y_train)

# Realizar predicciones en el conjunto de prueba
y_pred_tree = tree_model.predict(X_test)

# Evaluar el rendimiento del modelo
mse_tree = mean_squared_error(y_test, y_pred_tree)
r2_tree = r2_score(y_test, y_pred_tree)

# Mostrar resultados
print(f"Error cuadrático medio (MSE) del árbol de decisión: {mse_tree}")
print(f"Coeficiente de determinación (R²) del árbol de decisión: {r2_tree}")

# Graficar las predicciones vs. los valores reales para el árbol de decisión
plt.figure(figsize=(8, 6))
plt.scatter(y_test, y_pred_tree, color='green')
plt.plot([y_test.min(), y_test.max()], [y_test.min(), y_test.max()], color='red', linestyle='--')
plt.title('Árbol de Decisión: Predicciones vs. Valores reales')
plt.xlabel('Valores reales')
plt.ylabel('Predicciones')
plt.show()

# Si deseas visualizar el árbol de decisión
from sklearn.tree import plot_tree

plt.figure(figsize=(15,10))
plot_tree(tree_model, filled=True, feature_names=X.columns, class_names=['0', '1', '2'], rounded=True)
plt.title("Árbol de Decisión para el Dataset Wine")
plt.show()
