# Importación de bibliotecas
import numpy as np
import pandas as pd
from sklearn.datasets import load_iris
from sklearn.model_selection import train_test_split
from sklearn.naive_bayes import GaussianNB
from sklearn.metrics import accuracy_score, confusion_matrix, classification_report

# Cargar el dataset iris
iris = load_iris()
X = iris.data  # Características (sepal length, sepal width, petal length, petal width)
y = iris.target  # Clases (0 = setosa, 1 = versicolor, 2 = virginica)

# Dividir los datos en conjunto de entrenamiento y prueba
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)

# Crear y entrenar el modelo Naive Bayes
model = GaussianNB()
model.fit(X_train, y_train)

# Predicción en el conjunto de prueba
y_pred = model.predict(X_test)

# Evaluación del modelo
print("Accuracy:", accuracy_score(y_test, y_pred))
print("Confusion Matrix:\n", confusion_matrix(y_test, y_pred))
print("Classification Report:\n", classification_report(y_test, y_pred))

# Clasificación de nuevos datos
new_samples = [[5.1, 3.5, 1.4, 0.2],  # Ejemplo de setosa
               [6.7, 3.0, 5.2, 2.3]]  # Ejemplo de virginica
predictions = model.predict(new_samples)

for sample, pred in zip(new_samples, predictions):
    print(f"Características: {sample} -> Clase predicha: {iris.target_names[pred]}")
